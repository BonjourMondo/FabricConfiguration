
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fabric
  name: orderer
  annotations:
    k8s.eip.work/workload: orderer
    k8s.eip.work/displayName: Orderer
    k8s.eip.work/service: NodePort
    k8s.eip.work/ingress: 'false'
  labels:
    k8s.eip.work/layer: cloud
    k8s.eip.work/name: orderer
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: cloud
      k8s.eip.work/name: orderer
  template:
    metadata:
      labels:
        k8s.eip.work/layer: cloud
        k8s.eip.work/name: orderer
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets:
        - {}
      restartPolicy: Always
      initContainers: []
      hostAliases:
        - ip: "127.0.0.1"
          hostnames: 
            - orderer.example.com
            - peer0.org1.example.com
      containers:
        - image: 'hyperledger/fabric-peer:latest'
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          imagePullPolicy: IfNotPresent
          name: peer0
          volumeMounts:
            - name: docker-sock
              mountPath: /host/var/run
            - name: peer-org
              mountPath: /etc/hyperledger/msp            
          command:
            - peer
            - node
            - start
          resources:
            limits:
            requests:
          env: 
            - name: CORE_VM_ENDPOINT
              value: unix:///host/var/run/docker.sock
            - name: CORE_PEER_ID
              value: "peer0.org1.example.com"
            - name: CORE_PEER_ADDRESS
              value: "peer0.org1.example.com:7052"
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: "peer0.org1.example.com:7052"
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: "peer0.org1.example.com:7052"
            - name: CHAINCODE_LISTEN_ADDRESS
              value: "peer0.org1.example.com:8000"
            # - name: CORE_VM_HOSTCONFIG_DNS
            #   value: 139.59.77.160
            - name: CORE_PEER_LOCALMSPID
              value: "Org1MSP"
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: "false"
            - name: CORE_LOGGING_LEVEL
              value: "DEBUG"
            - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
              value: "bridge"
            - name: CORE_PEER_GOSSIP_USELEADERELECTION
              value: "true"
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: "false"
            - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
              value: "true"
            - name: CORE_PEER_PROFILE_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_ENABLED
              value: "false"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/msp/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/msp/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/msp/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
        - image: 'hyperledger/fabric-orderer:latest'
          imagePullPolicy: IfNotPresent
          name: orderer
          volumeMounts:
            - name: channel-artifacts
              mountPath: /etc/hyperledger/configtx
            - name: orderer-org
              mountPath: /etc/hyperledger/msp
          resources:
            limits:
            requests:
          command: 
            - orderer
            - start
          env: 
            - name: ORDERER_GENERAL_LOGLEVEL
              value: "DEBUG"
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: "0.0.0.0"
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: "file"
            - name: ORDERER_GENERAL_GENESISFILE
              value: "/etc/hyperledger/configtx/orderer.genesis.block"
            - name: ORDERER_GENERAL_LOCALMSPID
              value: "OrdererMSP"
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: "/etc/hyperledger/msp/ordererOrganizations/example.com/orderers/orderer.example.com/msp"
            - name: ORDERER_GENERAL_LEDGERTYPE
              value: "file"
            - name: ORDERER_GENERAL_BATCHTIMEOUT
              value: "2s"
            - name: ORDERER_GENERAL_MAXMESSAGECOUNT
              value: "10"
            - name: ORDERER_GENERAL_MAXWINDOWSIZE
              value: "1000"
            - name: ORDERER_GENERAL_LISTENPORT
              value: "7050"
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "false"
            - name: ORDERER_RAMLEDGER_HISTORY_SIZE
              value: "100"
            - name: CONFIGTX_ORDERER_ORDERERTYPE
              value: "solo"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: "/etc/hyperledger/msp/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: "/etc/hyperledger/msp/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/etc/hyperledger/msp/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt]"
      volumes:
        - name: channel-artifacts
          hostPath:
            path: /root/fabric/tools/channel-artifacts
            type: Directory
        - name: orderer-org
          hostPath:
            path: /root/fabric/tools/crypto-config
            type: Directory
        - name: docker-sock
          hostPath:
            path: /root/fabric/peer/peer0/var/run
            type: Directory
        - name: peer-org
          hostPath:
            path: /root/fabric/tools/crypto-config
            type: Directory
      terminationGracePeriodSeconds: 30
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: fabric
  name: orderer
  annotations:
    k8s.eip.work/workload: orderer
    k8s.eip.work/displayName: Orderer
  labels:
    k8s.eip.work/layer: cloud
    k8s.eip.work/name: orderer
spec:
  selector:
    k8s.eip.work/layer: cloud
    k8s.eip.work/name: orderer
  type: NodePort
  ports:
    - port: 7050
      targetPort: 7050
      protocol: TCP
      name: 8bdatz
      nodePort: 30705
    - port: 7051
      targetPort: 7051
      protocol: TCP
      name: djcn7t
      nodePort: 30751
    - port: 8000  
      targetPort: 8000
      protocol: TCP
      name: dabn7b
      nodePort: 30800

