
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fabric
  name: cli
  annotations:
    k8s.eip.work/workload: cli
    k8s.eip.work/displayName: Fabric Tools
    k8s.eip.work/service: none
    k8s.eip.work/ingress: 'false'
  labels:
    k8s.eip.work/layer: cloud
    k8s.eip.work/name: cli
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: cloud
      k8s.eip.work/name: cli
  template:
    metadata:
      labels:
        k8s.eip.work/layer: cloud
        k8s.eip.work/name: cli
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'hyperledger/fabric-tools:latest'
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          imagePullPolicy: IfNotPresent
          name: fbc-tools
          volumeMounts:
            - name: chaincode
              mountPath: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
            - name: crypto
              mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
            - name: scripts
              mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
            - name: channel-artifacts
              mountPath: >-
                /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
            - name: configtx
              mountPath: /etc/hyperledger/fabric/configtx.yaml
            - name: crypto-config
              mountPath: /etc/hyperledger/fabric/crypto-config.yaml
            - name: docker-sock
              mountPath: /var/run
          command:
            - /bin/bash
            - '-c'
            - while true; do sleep 20191116; done
          resources:
            limits:
            requests:
          env:
            - name: GOPATH
              value: /opt/gopath
            - name: CORE_VM_ENDPOINT
              value: 'unix:///host/var/run/docker.sock'
            - name: CORE_PEER_ID
              value: cli
            - name: CORE_PEER_ADDRESS
              value: "peer0.org1.example.com:7051"
            - name: CORE_PEER_LOCALMSPID
              value: "Org1MSP"
            - name: CORE_PEER_TLS_ENABLED
              value: "false"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
            - name: CORE_PEER_MSPCONFIGPATH
              value: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp"
          securityContext:
            seLinuxOptions: {}
      volumes:
        - name: chaincode
          hostPath:
            path: /root/fabric/tools/chaincode
        - name: crypto
          hostPath:
            path: /root/fabric/tools/crypto-config
            type: Directory
        - name: scripts
          hostPath:
            path: /root/fabric/tools/scripts
            type: Directory
        - name: channel-artifacts
          hostPath:
            path: /root/fabric/tools/channel-artifacts
            type: Directory
        - name: configtx
          hostPath:
            path: /root/fabric/tools/configtx.yaml
            type: File
        - name: crypto-config
          hostPath:
            path: /root/fabric/tools/crypto-config.yaml
            type: File
        - name: docker-sock
          hostPath:
            path: /root/fabric/tools/docker-sock
            type: Directory
      terminationGracePeriodSeconds: 30
  replicas: 1

